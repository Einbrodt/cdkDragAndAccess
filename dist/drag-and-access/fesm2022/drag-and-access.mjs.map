{"version":3,"file":"drag-and-access.mjs","sources":["../../../projects/drag-and-access/src/lib/drag-and-access.ts","../../../projects/drag-and-access/src/lib/drag-and-access-list.ts","../../../projects/drag-and-access/src/lib/drag-and-access-utils.ts","../../../projects/drag-and-access/src/public-api.ts","../../../projects/drag-and-access/src/drag-and-access.ts"],"sourcesContent":["import {CdkDrag, CdkDragDrop, CdkDropList} from \"@angular/cdk/drag-drop\";\n\nexport class DragAndAccess<T, O, I> implements CdkDragDrop<T, O, I> {\n  previousIndex: number;\n  currentIndex: number;\n  item: CdkDrag<I>;\n  container: CdkDropList<T>;\n  previousContainer: CdkDropList<O>;\n  isPointerOverContainer: boolean;\n  distance: { x: number; y: number; };\n  dropPoint: { x: number; y: number; };\n  event: MouseEvent | TouchEvent;\n\n  constructor(\n    previousIndex: number,\n    currentIndex: number,\n    item: CdkDrag<I>,\n    container: CdkDropList<T>,\n    previousContainer: CdkDropList<O>,\n    isPointerOverContainer: boolean,\n    distance: { x: number; y: number; },\n    dropPoint: { x: number; y: number; },\n    event: MouseEvent | TouchEvent\n  ) {\n    this.previousIndex = previousIndex;\n    this.currentIndex = currentIndex;\n    this.item = item;\n    this.container = container;\n    this.previousContainer = previousContainer;\n    this.isPointerOverContainer = isPointerOverContainer;\n    this.distance = distance;\n    this.dropPoint = dropPoint;\n    this.event = event;\n  }\n\n  accessItemValues(callback: (data: I) => void): void {\n    if (this.item.data) {\n      const data = this.item.data as I;\n      callback(data);\n    } else {\n      console.error('Item data is undefined');\n    }\n  }\n}\n","import {ChangeDetectorRef, Directive, ElementRef, EventEmitter, Inject, Optional, Output} from '@angular/core';\nimport {CdkDrag, CdkDragDrop, CdkDropList, CdkDropListGroup, DragDrop, DragDropConfig} from \"@angular/cdk/drag-drop\";\nimport {DragAndAccess} from \"./drag-and-access\";\nimport {ScrollDispatcher} from \"@angular/cdk/scrolling\";\nimport {Directionality} from \"@angular/cdk/bidi\";\n\n@Directive({\n  selector: '[DragAndAccessList]',\n  exportAs: 'cdkDropAndAccessList',\n})\nexport class DragAndAccessList<T, O, I> extends CdkDropList<T> {\n  @Output() dragAndAccessDropped = new EventEmitter<DragAndAccess<T, O, I>>();\n\n  constructor(\n    element: ElementRef<HTMLElement>,\n    dragDrop: DragDrop,\n    _changeDetectorRef: ChangeDetectorRef,\n    _scrollDispatcher: ScrollDispatcher,\n    @Optional() _dir: Directionality,\n    @Optional() _group: CdkDropListGroup<CdkDropList>,\n  ) {\n    super(element, dragDrop, _changeDetectorRef, _scrollDispatcher, _dir, _group);\n\n    this.dropped.subscribe((event: CdkDragDrop<T, O>) => {\n      const customEvent = new DragAndAccess<T, O, I>(\n        event.previousIndex,\n        event.currentIndex,\n        event.item,\n        event.container,\n        event.previousContainer,\n        event.isPointerOverContainer,\n        event.distance,\n        event.dropPoint,\n        event.event\n      );\n      this.dragAndAccessDropped.emit(customEvent);\n    });\n  }\n}\n","import {CdkDragDrop} from \"@angular/cdk/drag-drop\";\nimport {DragAndAccess} from \"./drag-and-access\";\n\nexport function convertToCdkDragAndAccess<T>(event: CdkDragDrop<T[]>): DragAndAccess<T[], any, T> {\n  return new DragAndAccess<T[], any, T>(\n    event.previousIndex,\n    event.currentIndex,\n    event.item,\n    event.container,\n    event.previousContainer,\n    event.isPointerOverContainer,\n    event.distance,\n    event.dropPoint,\n    event.event\n  );\n}\n","/*\n * Public API Surface of drag-and-access\n */\n\nexport * from './lib/drag-and-access';\nexport * from './lib/drag-and-access-list';\nexport * from './lib/drag-and-access-utils';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}